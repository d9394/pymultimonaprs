#!/bin/sh /etc/rc.common
# Copyright (C) 2014-2016 OpenWrt.org

START=90
STOP=10
USE_PROCD=1
CFG_FILE="/tmp/etc/pymultimonaprs.json"
APRS_SERVER=""

append_arg() {
	local type="$1"
	local cfg="$2"
	local var="$3"
	local opt="$4"
	local def="$5"
	local val

	config_get val "$cfg" "$var"
	if [ "$type" == "1"]; then
		[ -n "$val" -o -n "$def" ] && procd_append_param command $opt "${val:-$def}"
	else
		[ -n "$val" -o -n "$def" ] && echo -e \"$cfg\"\:\"${val:-$def}\"\,\n >> $CFG_FILE
	fi
}

append_bool() {
	local type="$1"
	local cfg="$2"
	local var="$3"
	local opt="$4"
	local def="$5"
	local val

	config_get_bool val "$cfg" "$var" "$def"
	if [ "$type" == "1" ]; then
		[ "$val" = 1 ] && procd_append_param command "$opt"
	else
		if [ "$val" -eq 1 ]; then
			echo -e \"$cfg\"\:true\,\n >> $CFG_FILE
		else
			echo -e \"$cfg\"\:false\,\n >> $CFG_FILE
		fi
	fi
}

append_aprs_server() {
	local server="$1"
	if [ "$APRS_SERVER" == "" ]; then
		APRS_SERVER=\"$server\"
	else
		APRS_SERVER=APRS_SERVER":"\"$server\"
	fi
}

append_list() {
	local type="$1"
	local cfg="$2"
	local var="$3"
	local opt="$4"
	local def="$5"
	local val
	
	config_list_foreach "$cfg" "$var" append_aprs_server
	[ -n "$APRS_SERVER" -o -n "$def" ] && echo -e \"$cfg\"\:\[{$APRS_SERVER:-$def\]\,\n >> $CFG_FILE
}

get_config_json() {
  local cfg="$1"
  local val

  echo { > $CFG_FILE
  append_arg 2 "$cfg" "callsign" "bb7is-5"
  append_arg 2 "$cfg" "passcode" "12345"
  append_list 2 "$cfg" "gateway" "\[\"202.141.176.2\:14580\"\,\"noam.aprs2.net\:14580\"\]"
  append_arg 2 "$cfg" "preferred_protocol" "any"
  append_bool 2 "$cfg" "append_callsign" 1
  append_arg 2 "$cfg" "source" "rtl"
  echo -e \"rtl\"\:\{\n >> $CFG_FILE
  append_arg 2 "$cfg" "freq" "144.640000"
  append_arg 2 "$cfg" "ppm" "0"
  append_arg 2 "$cfg" "gain" "0"
  append_bool 2 "$cfg" "offset_tuning" 0
  append_arg 2 "$cfg" "device_index" "0"
  append_arg 2 "$cfg" "squelch_level" "1"
  echo -e \}\,\n\"alsa\"\:\{\n >> $CFG_FILE
  append_arg 2 "$cfg" "device" "default"
  echo -e \}\,\"beacon\"\:\{\n >> $CFG_FILE
  append_arg 2 "$cfg" "lat" "23.0000"
  append_arg 2 "$cfg" "lng" "113.0000"
  append_arg 2 "$cfg" "table" "R"
  append_arg 2 "$cfg" "symbol" "&"
  append_arg 2 "$cfg" "comment" "PyMultimonAPRS iGate"
  append_arg 2 "$cfg" "send_every" "300"
  append_arg 2 "$cfg" "ambiguity" "0"
  echo -e \"status\"\:\{\n >> $CFG_FILE
  append_arg 2 "$cfg" "text" "Running on Openwrt with RTL dongle"
  append_bool 2 "$cfg" "file" "0"
  echo -e \}\n\}\n\} >> $CFG_FILE
  
  
}

start_instance() {
  local cfg="$1"
  local aux
  
  if [ ! -f /etc/config/pymultimonaprs ]; then
    echo config file not found.
    return 0
  fi
  
  config_get_bool aux "$cfg" 'disabled' '0'
  [ "$aux" = 1 ] && return 1

  get_config_json $cfg

  procd_open_instance
  procd_set_param command "pythun -u /etc/pymultimonaprs.py -c /tmp/etc/pymultimonaprs.json"
  append_bool 1 "$cfg" debug "-v"
  append_arg 1 "$cfg" logging "--logfile" "/tmp/aprs.log"
  append_bool 1 "$cfg" syslog "--syslog"
  procd_close_instance
}

service_triggers() {
	procd_add_reload_trigger "pymultimonaprs"
}

start_service() {
	config_load pymultimonaprs
	start_instance pymultimonaprs
}
