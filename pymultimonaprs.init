#!/bin/sh /etc/rc.common
# Copyright (C) 2014-2016 OpenWrt.org

START=90
STOP=10

CFG_FILE="/tmp/etc/pymultimonaprs.json"
APRS_SERVER=""
ARGS=""

append_arg() {
        local type="$1"
        local cfg="$2"
        local var="$3"
        local opt="$4"
        local def="$5"
        local val

        config_get val "$cfg" "$var"
        if [ "$type" == "1" ]; then
                [ -n "$val" -o -n "$def" ] && ARGS=$ARGS" "$opt" "${val:-$def}
        else
                [ -n "$val" -o -n "$def" ] && echo -e \"$var\":\"${val:-$def}\", >> $CFG_FILE
        fi
}

append_bool() {
        local type="$1"
        local cfg="$2"
        local var="$3"
        local opt="$4"
        local def="$5"
        local val

        config_get_bool val "$cfg" "$var" "$def"
        if [ "$type" == "1" ]; then
                [ "$val" = 1 ] && ARGS=$ARGS" "$opt
        else
                if [ "$val" -eq 1 ]; then
                        echo -e \"$var\":true, >> $CFG_FILE
                else
                        echo -e \"$var\":false, >> $CFG_FILE
                fi
        fi
}

append_aprs_server() {
        local server="$1"
        if [ "$APRS_SERVER" == "" ]; then
                APRS_SERVER=\"$server\"
        else
                APRS_SERVER=$APRS_SERVER","\"$server\"
        fi
}

append_list() {
        local type="$1"
        local cfg="$2"
        local var="$3"
        local opt="$4"
        local def="$5"
        local val

        config_list_foreach "$cfg" "$var" append_aprs_server
        [ -n "$APRS_SERVER" -o -n "$def" ] && echo -e \"$var\":\[${APRS_SERVER:-$def}\]\, >> $CFG_FILE
}

get_config_json() {
  local cfg="$1"
  local val

  echo { > $CFG_FILE
  append_arg 2 "$cfg" "callsign" "" "aa1aa"
  append_arg 2 "$cfg" "passcode" "" "00000"
  append_list 2 "$cfg" "gateway" "" '"euro.aprs.fi:14580","china.aprs2.net:14580"'
  append_arg 2 "$cfg" "preferred_protocol" "" "any"
  append_bool 2 "$cfg" "append_callsign" "" 1
  append_arg 2 "$cfg" "source" "" "rtl"
  echo -e \"rtl\":{ >> $CFG_FILE
  append_arg 2 "$cfg" "freq" "" "144.800000"
  append_arg 2 "$cfg" "ppm" "" "0"
  append_arg 2 "$cfg" "gain" "" "0"
  append_bool 2 "$cfg" "offset_tuning" "" 0
  append_arg 2 "$cfg" "device_index" "" "0"
  append_arg 2 "$cfg" "squelch_level" "0"
  echo -e "\"\":\"\"},\n"\"alsa\":{ >> $CFG_FILE
  append_arg 2 "$cfg" "device" "" "default"
  echo -e "\"\":\"\"},\n"\"beacon\":{ >> $CFG_FILE
  append_bool 2 "$cfg" "beacon" "" "1"
  append_arg 2 "$cfg" "lat" "" "10.0000"
  append_arg 2 "$cfg" "lng" "" "10.0000"
  append_arg 2 "$cfg" "table" "" "R"
  append_arg 2 "$cfg" "symbol" "" "&"
  append_arg 2 "$cfg" "comment" "" "PyMultimonAPRS iGate"
  append_arg 2 "$cfg" "send_every" "" "300"
  append_arg 2 "$cfg" "ambiguity" "" "0"
  append_bool 2 "$cfg" "weather" "" "0"
  echo -e \"status\":{ >> $CFG_FILE
  append_arg 2 "$cfg" "text" "" "Running on Openwrt with RTL dongle"
  append_bool 2 "$cfg" "file" "" "0"
  echo -e "\"\":\"\"}\n}\n}" >> $CFG_FILE
}

start_instance() {
  local cfg="$1"
  local aux

  if [ ! -f /etc/config/pymultimonaprs ]; then
    echo config file not found.
    return 1
  fi

  config_get_bool aux "$cfg" 'disabled' '0'
  if [ "$aux" = 1 ]; then
    stop
    return 1
  fi
  get_config_json $cfg

  append_bool 1 "$cfg" debug "-v"
  append_arg 1 "$cfg" logging "--logfile"
#  append_bool 1 "$cfg" syslog "--syslog"
  echo starting pymultimonaprs with $ARGS
  /usr/bin/python -u /etc/pymultimonaprs/pymultimonaprs.py -c /tmp/etc/pymultimonaprs.json $ARGS &
}

start() {
  config_load pymultimonaprs
  config_foreach start_instance pymultimonaprs
}

stop() {
  ps | grep pymultimonaprs.py | grep -v grep | awk '{print $1}' | xargs kill -9
  ps | grep rtl_fm | grep -v grep | awk '{print $1}' | xargs kill -9
}

restart() {
  stop
  start
}
